@PACKAGE_INIT@

# Location of gp/gp.h
# This will be relative unless explicitly set as absolute
set(gp_INCLUDE_DIR "@gp_INCLUDEDIR@")

set(gp_LIBRARY "@gp_LIB_INSTALL_DIR@")
set(gp_BINARY_DIR "@gp_BINARY_DIR@")
set(gp_DEFINITIONS USING_gp)
set(gp_VERSION_TYPE "@gp_VERSION_TYPE@")

check_required_components(gp)

include("${CMAKE_CURRENT_LIST_DIR}/gpTargets.cmake")
set_and_check(gp_LIB_INSTALL_DIR "@PACKAGE_LIB_INSTALL_DIR@")
# set_and_check(gp_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")
# set_and_check(gp_SYSCONFIG_DIR "@PACKAGE_SYSCONFIG_INSTALL_DIR@")
# set_and_check(gp_LIB_LIBRARY @PACKAGE_LIB_INSTALL_DIR@/@CMAKE_STATIC_LIBRARY_PREFIX@@PROJECT_NAME_LIB@@CMAKE_STATIC_LIBRARY_SUFFIX@)
# set_and_check(gp_LIB_LIBRARIES @PACKAGE_LIB_INSTALL_DIR@/@CMAKE_STATIC_LIBRARY_PREFIX@@PROJECT_NAME_LIB@@CMAKE_STATIC_LIBRARY_SUFFIX@)

# Easier to use / remember
add_library(gp::headers IMPORTED INTERFACE)
set_target_properties(gp::headers PROPERTIES INTERFACE_LINK_LIBRARIES
                                                   gp::gp_headers)

# include("${CMAKE_CURRENT_LIST_DIR}/gpCommon.cmake")

if(NOT gp_FIND_QUIETLY)
  message(
    STATUS
      "Found gp: ${gp_INCLUDE_DIR} (found version \"${gp_VERSION}${gp_VERSION_TYPE}\")"
  )
endif()
